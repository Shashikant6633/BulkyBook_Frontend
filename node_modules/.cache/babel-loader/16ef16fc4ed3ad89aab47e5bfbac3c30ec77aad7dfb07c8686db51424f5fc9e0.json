{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbhagwanshinde\\\\Desktop\\\\mini proj\\\\my-app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n//import Navbar from './navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [loginStatus, setLoginStatus] = useState('');\n  const navigate = useNavigate();\n  const adminUsername = 'admin@gmail.com';\n  const adminPassword = 'admin';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (username === adminUsername && password === adminPassword) {\n        toast.success('Login successful!');\n        setLoginStatus('Login successful!');\n        navigate('/admin');\n        // After upon successful login\n      } else {\n        const response = await axios.post('http://localhost:5120/api/User/login', {\n          username,\n          password,\n          phoneNumber,\n          confirmPassword,\n          name\n        });\n\n        // When returns a success message upon successful login\n        if (response.data === 'Login successful') {\n          toast.success('Login successful!');\n          setLoginStatus('Login successful!');\n          navigate('/user');\n          // Further actions upon successful login\n        } else {\n          setLoginStatus('Invalid credentials');\n        }\n      }\n    } catch (error) {\n      toast.error('Login Failed!');\n      console.error('Login failed:', error);\n      setLoginStatus('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Use a local account to log in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: username,\n              className: \"form-control\",\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"Username/Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              className: \"form-control\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-100 btn btn-lg btn btn-primary\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \"Register Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"tMct9O/idsWRNKlr3CK6uOMahTs=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","phoneNumber","setPhoneNumber","confirmPassword","setConfirmPassword","name","setName","loginStatus","setLoginStatus","navigate","adminUsername","adminPassword","handleSubmit","e","preventDefault","success","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","value","onChange","target","htmlFor","href","_c","$RefreshReg$"],"sources":["C:/Users/sbhagwanshinde/Desktop/mini proj/my-app/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import Navbar from './navbar';\r\n \r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n \r\n    const navigate = useNavigate();\r\n \r\n \r\n    const adminUsername = 'admin@gmail.com';\r\n    const adminPassword = 'admin';\r\n \r\n \r\n \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n \r\n        try {\r\n            if (username === adminUsername && password === adminPassword) {\r\n                toast.success('Login successful!');\r\n                setLoginStatus('Login successful!');\r\n                navigate('/admin');\r\n                // After upon successful login\r\n            } else {\r\n                const response = await axios.post('http://localhost:5120/api/User/login', {\r\n                    username,\r\n                    password,\r\n                    phoneNumber,\r\n                    confirmPassword,\r\n                    name\r\n                });\r\n \r\n                // When returns a success message upon successful login\r\n                if (response.data === 'Login successful') {\r\n                    toast.success('Login successful!');\r\n                    setLoginStatus('Login successful!');\r\n                    navigate('/user');\r\n                    // Further actions upon successful login\r\n                } else {\r\n                    setLoginStatus('Invalid credentials');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            toast.error('Login Failed!');\r\n            console.error('Login failed:', error);\r\n            setLoginStatus('Login failed');\r\n        }\r\n    };\r\n \r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <div className=\"container pt-5\">\r\n                <h1>Log in</h1>\r\n                <h2>Use a local account to log in.</h2> <hr />\r\n                <section>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"text\" value={username} className='form-control' onChange={(e) => setUsername(e.target.value)} />\r\n                            <label htmlFor=\"email\" className=\"form-label\">Username/Email</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"password\" value={password} className='form-control' onChange={(e) => setPassword(e.target.value)} />\r\n                            <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                        </div>\r\n                        <br />\r\n                        <button type=\"submit\" className=\"w-100 btn btn-lg btn btn-primary\">Login</button>\r\n                        <a href='/register'>Register Here</a>\r\n                    </form>\r\n                    {/* {loginStatus && <p style={{ color: 'red', fontWeight: 'bold' }}>{loginStatus}</p>} */}\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n \r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}