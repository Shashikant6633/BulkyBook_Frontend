{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbhagwanshinde\\\\Desktop\\\\mini proj\\\\my-app\\\\src\\\\components\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// CartContext.js\nimport React, { createContext, useContext, useReducer, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cartItems: []\n  // other cart-related state\n};\n\nconst cartReducer = (state, action) => {\n  // your cart reducer logic\n};\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartState, dispatch] = useReducer(cartReducer, initialState);\n\n  // your cart provider logic, like addToCart, removeFromCart, etc.\n\n  const contextValue = {\n    cartState,\n    addToCart,\n    removeFromCart\n    // other cart-related functions\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"5HMyNLafr0jAB3F1BrBNunCcgEE=\");\n_c = CartProvider;\nconst useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { CartProvider, useCart };\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useCallback","jsxDEV","_jsxDEV","CartContext","initialState","cartItems","cartReducer","state","action","CartProvider","children","_s","cartState","dispatch","contextValue","addToCart","removeFromCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/sbhagwanshinde/Desktop/mini proj/my-app/src/components/CartContext.js"],"sourcesContent":["// CartContext.js\r\nimport React, { createContext, useContext, useReducer, useCallback } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  // other cart-related state\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  // your cart reducer logic\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [cartState, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n  // your cart provider logic, like addToCart, removeFromCart, etc.\r\n\r\n  const contextValue = {\r\n    cartState,\r\n    addToCart,\r\n    removeFromCart,\r\n    // other cart-related functions\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={contextValue}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nconst useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport { CartProvider, useCart };\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,YAAY,GAAG;EACnBC,SAAS,EAAE;EACX;AACF,CAAC;;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC;AAAA,CACD;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGd,UAAU,CAACO,WAAW,EAAEF,YAAY,CAAC;;EAEnE;;EAEA,MAAMU,YAAY,GAAG;IACnBF,SAAS;IACTG,SAAS;IACTC;IACA;EACF,CAAC;;EAED,oBACEd,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAEJ,YAAa;IAAAJ,QAAA,EACvCA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACX,EAAA,CAjBIF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAmBlB,MAAMe,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAMC,OAAO,GAAG5B,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACuB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANID,OAAO;AAQb,SAASf,YAAY,EAAEe,OAAO;AAAG,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}