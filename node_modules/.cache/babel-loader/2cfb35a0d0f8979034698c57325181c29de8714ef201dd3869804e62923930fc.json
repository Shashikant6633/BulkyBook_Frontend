{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbhagwanshinde\\\\Desktop\\\\mini proj\\\\my-app\\\\src\\\\components\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\n\n// Define the initial state for the cart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCartState = {\n  cartItems: []\n};\n\n// Define actions to manipulate the cart state\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.payload]\n      };\n    case 'UPDATE_QUANTITY':\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => item.id === action.payload.id ? {\n          ...item,\n          count: action.payload.count\n        } : item)\n      };\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\n\n// Create the CartContext\nconst CartContext = /*#__PURE__*/createContext();\n\n// Create the CartProvider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\n  const addToCart = item => {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: item\n    });\n  };\n  const updateQuantity = (id, count) => {\n    dispatch({\n      type: 'UPDATE_QUANTITY',\n      payload: {\n        id,\n        count\n      }\n    });\n  };\n  const removeFromCart = id => {\n    dispatch({\n      type: 'REMOVE_FROM_CART',\n      payload: id\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems: state.cartItems,\n      addToCart,\n      updateQuantity,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook to use the CartContext\n_s(CartProvider, \"mtmFHVjKsNxxUfN+nVmcBNGW/sI=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialCartState","cartItems","cartReducer","state","action","type","payload","map","item","id","count","filter","CartContext","CartProvider","children","_s","dispatch","addToCart","updateQuantity","removeFromCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/sbhagwanshinde/Desktop/mini proj/my-app/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\n// Define the initial state for the cart\r\nconst initialCartState = {\r\n  cartItems: [],\r\n};\r\n\r\n// Define actions to manipulate the cart state\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      return {\r\n        ...state,\r\n        cartItems: [...state.cartItems, action.payload],\r\n      };\r\n    case 'UPDATE_QUANTITY':\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map((item) =>\r\n          item.id === action.payload.id\r\n            ? { ...item, count: action.payload.count }\r\n            : item\r\n        ),\r\n      };\r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((item) => item.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create the CartContext\r\nconst CartContext = createContext();\r\n\r\n// Create the CartProvider component\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\r\n\r\n  const addToCart = (item) => {\r\n    dispatch({ type: 'ADD_TO_CART', payload: item });\r\n  };\r\n\r\n  const updateQuantity = (id, count) => {\r\n    dispatch({ type: 'UPDATE_QUANTITY', payload: { id, count } });\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    dispatch({ type: 'REMOVE_FROM_CART', payload: id });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems: state.cartItems, addToCart, updateQuantity, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Create a custom hook to use the CartContext\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;;AAEpE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG;EACvBC,SAAS,EAAE;AACb,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QACL,GAAGF,KAAK;QACRF,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAS,EAAEG,MAAM,CAACE,OAAO;MAChD,CAAC;IACH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGH,KAAK;QACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACM,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GACzB;UAAE,GAAGD,IAAI;UAAEE,KAAK,EAAEN,MAAM,CAACE,OAAO,CAACI;QAAM,CAAC,GACxCF,IACN;MACF,CAAC;IACH,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGL,KAAK;QACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACU,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MACxE,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMS,WAAW,gBAAGjB,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMkB,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACZ,KAAK,EAAEa,QAAQ,CAAC,GAAGnB,UAAU,CAACK,WAAW,EAAEF,gBAAgB,CAAC;EAEnE,MAAMiB,SAAS,GAAIT,IAAI,IAAK;IAC1BQ,QAAQ,CAAC;MAAEX,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEE;IAAK,CAAC,CAAC;EAClD,CAAC;EAED,MAAMU,cAAc,GAAGA,CAACT,EAAE,EAAEC,KAAK,KAAK;IACpCM,QAAQ,CAAC;MAAEX,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAE;QAAEG,EAAE;QAAEC;MAAM;IAAE,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMS,cAAc,GAAIV,EAAE,IAAK;IAC7BO,QAAQ,CAAC;MAAEX,IAAI,EAAE,kBAAkB;MAAEC,OAAO,EAAEG;IAAG,CAAC,CAAC;EACrD,CAAC;EAED,oBACEV,OAAA,CAACa,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEpB,SAAS,EAAEE,KAAK,CAACF,SAAS;MAAEgB,SAAS;MAAEC,cAAc;MAAEC;IAAe,CAAE;IAAAL,QAAA,EACpGA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAV,EAAA,CAtBaF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAuBzB,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOhC,UAAU,CAACgB,WAAW,CAAC;AAChC,CAAC;AAACgB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}