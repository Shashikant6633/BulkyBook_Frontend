{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sbhagwanshinde\\\\Desktop\\\\mini proj\\\\my-app\\\\src\\\\components\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Define the initial state for the cart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialCartState = {\n  cartItems: []\n};\n\n// Define actions to manipulate the cart state\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return {\n        ...state,\n        cartItems: [...state.cartItems, action.payload]\n      };\n    case 'UPDATE_QUANTITY':\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => item.id === action.payload.id ? {\n          ...item,\n          count: action.payload.count\n        } : item)\n      };\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\n      };\n    case 'PLUS_ONE':\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => item.id === action.payload ? {\n          ...item,\n          count: item.count + 1\n        } : item)\n      };\n    case 'MINUS_ONE':\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => item.id === action.payload && item.count > 1 ? {\n          ...item,\n          count: item.count - 1\n        } : item)\n      };\n    case 'LOAD_CART':\n      return {\n        ...state,\n        cartItems: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create the CartContext\nconst CartContext = /*#__PURE__*/createContext();\n\n// Create the CartProvider component\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\n\n  // Load data from local storage on component mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      dispatch({\n        type: 'LOAD_CART',\n        payload: JSON.parse(savedCart)\n      });\n    }\n  }, []);\n\n  // Save data to local storage whenever cartItems change\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state.cartItems));\n  }, [state.cartItems]);\n  const apiUrl = 'http://localhost:5120/api/Cart';\n  const addToCart = async item => {\n    try {\n      const response = await fetch(`${apiUrl}/add`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n          // Add any authentication headers if needed\n        },\n\n        body: JSON.stringify(item)\n      });\n      if (response.ok) {\n        dispatch({\n          type: 'ADD_TO_CART',\n          payload: item\n        });\n      } else {\n        console.error('Failed to add item to cart');\n      }\n    } catch (error) {\n      console.error('Network error while adding item to cart', error);\n    }\n  };\n\n  // Add similar API calls for other actions (updateQuantity, removeFromCart, handlePlus, handleMinus)\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems: state.cartItems,\n      addToCart\n      // Add other action functions here\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a custom hook to use the CartContext\n_s(CartProvider, \"N9Qr+A0aRJMlyg7bdKq5KIdOHUo=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialCartState","cartItems","cartReducer","state","action","type","payload","map","item","id","count","filter","CartContext","CartProvider","children","_s","dispatch","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","apiUrl","addToCart","response","fetch","method","headers","body","ok","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/sbhagwanshinde/Desktop/mini proj/my-app/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\n// Define the initial state for the cart\r\nconst initialCartState = {\r\n  cartItems: [],\r\n};\r\n\r\n// Define actions to manipulate the cart state\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      return {\r\n        ...state,\r\n        cartItems: [...state.cartItems, action.payload],\r\n      };\r\n    case 'UPDATE_QUANTITY':\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map((item) =>\r\n          item.id === action.payload.id\r\n            ? { ...item, count: action.payload.count }\r\n            : item\r\n        ),\r\n      };\r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((item) => item.id !== action.payload),\r\n      };\r\n    case 'PLUS_ONE':\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map((item) =>\r\n          item.id === action.payload ? { ...item, count: item.count + 1 } : item\r\n        ),\r\n      };\r\n    case 'MINUS_ONE':\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.map((item) =>\r\n          item.id === action.payload && item.count > 1 ? { ...item, count: item.count - 1 } : item\r\n        ),\r\n      };\r\n    case 'LOAD_CART':\r\n      return {\r\n        ...state,\r\n        cartItems: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create the CartContext\r\nconst CartContext = createContext();\r\n\r\n// Create the CartProvider component\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialCartState);\r\n\r\n  // Load data from local storage on component mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      dispatch({ type: 'LOAD_CART', payload: JSON.parse(savedCart) });\r\n    }\r\n  }, []);\r\n\r\n  // Save data to local storage whenever cartItems change\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(state.cartItems));\r\n  }, [state.cartItems]);\r\n\r\n  const apiUrl = 'http://localhost:5120/api/Cart';\r\n\r\n  const addToCart = async (item) => {\r\n    try {\r\n      const response = await fetch(`${apiUrl}/add`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // Add any authentication headers if needed\r\n        },\r\n        body: JSON.stringify(item),\r\n      });\r\n\r\n      if (response.ok) {\r\n        dispatch({ type: 'ADD_TO_CART', payload: item });\r\n      } else {\r\n        console.error('Failed to add item to cart');\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error while adding item to cart', error);\r\n    }\r\n  };\r\n\r\n  // Add similar API calls for other actions (updateQuantity, removeFromCart, handlePlus, handleMinus)\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems: state.cartItems,\r\n        addToCart,\r\n        // Add other action functions here\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Create a custom hook to use the CartContext\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}